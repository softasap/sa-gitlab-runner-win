---

  - name: Gitlab Runner | Check if a service is installed
    win_service:
      name: gitlab-runner
    register: gitlab_service

  - debug: var="gitlab_service"

  - name: Gitlab Runner | Stop if exists
    win_service:
      name: gitlab-runner
      state: stopped
    when: gitlab_service.exists

  - name: Create dir (per installation docs)
    win_file:
      path: C:\GitLab-Runner
      state: directory

  - name: Fetch GitLab Runner Binary
    win_get_url:
      url: https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-windows-amd64.exe
      dest: C:\GitLab-Runner\gitlab-runner.exe

#       --config value Config file [%CONFIG_FILE%]

  - name: configure GitLab Runner
    win_shell:
      C:\GitLab-Runner\gitlab-runner.exe register --non-interactive `
       --url {{ gitlab_runner_ci_url }} `
       --registration-token {{ gitlab_runner_registration_token }} `
       --executor shell `
       --description "{{ gitlab_runner_description }}" `
       --builds-dir "{{ gitlab_builds_dir }}" `
       --cache-dir "{{ gitlab_caches_dir }}" `
       --shell {{ gitlab_shell }} `
       --tag-list {{ gitlab_tags | default("windows") }} `
       {{ "--env '%s'" | format(gitlab_environment) }}
    when: option_gitlab_register_runner

  - name: Install runner as service
    win_command: C:\GitLab-Runner\gitlab-runner.exe install
    when: not gitlab_service.exists and option_gitlab_register_runner

  - name: Start runner service
    win_command: C:\GitLab-Runner\gitlab-runner.exe start
    when: not gitlab_service.exists and option_gitlab_register_runner

  - name: Template batches
    win_template:
      src: "{{ item }}.j2"
      dest: "C:\GitLab-Runner\{{ item }}"
    with_items:
      - "getrunner.ps1"
      - "register-custom-cert.ps1"
      - "register-runner.ps1"